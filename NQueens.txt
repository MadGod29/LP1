#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

void displayBoard(vector<vector<int>> & queens, int n) 
{
    for (int i = 0; i < n; ++i) 
    {
        for (int j = 0; j < n; ++j) 
        {
            if (queens[i][j]== 1) 
            {
                cout << "Q ";
            } 
            else 
            {
                cout << ". ";
            }
        }
        cout << endl;
    }
    cout << endl;
}

bool isSafe(vector<vector<int>> & queens, int row, int col,int n) 
{

   int x = row;
   int y = col;

   //check for same row
   while(y>=0) {
        if(queens[x][y] == 1)
        {
            return false;
        }
        y--;
   }

   x = row;
   y = col;
   //check for upper diagonal
    while(x>=0 && y>=0 )
    {
        if(queens[x][y] == 1)
        {
            return false;
        }
        y--;
        x--;
    }

    x = row;
   y = col;
   //checl for lower diagonal
    while(x<n && y>=0 )
    {
        if(queens[x][y] == 1)
        {
            return false;
        }
        y--;
        x++;
    }

    return true;


}

void placeQueens(int col,vector<vector<int>>& queens, int n) 
{
    if(col == n)
    {
        displayBoard(queens,n);
        return;
    }
    
    for(int row = 0;row<n;row++)
    {
        if(isSafe(queens,row,col,n))
        {
            queens[row][col] = 1;
            placeQueens(col+1,queens,n);
            queens[row][col] = 0;
        }

    }
        
    
    
}

int main() 
{
    int n;
    cout << "Enter the number of queens: ";
    cin >> n;

    vector<vector<int>> queens(n, vector<int>(n,0));
    int solutionCount = 0;

    placeQueens(0,queens,n);


    return 0;
}
